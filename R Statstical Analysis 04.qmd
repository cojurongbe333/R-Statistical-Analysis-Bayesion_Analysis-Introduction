---
title: "STA6990: Week 4"
author: "Chantal Ojurongbe"
execute:
  echo: true
  warning: false
  message: false
format: 
  html:
    embed-resources: true
editor: source
---

Note from Dr. Seals: my intention is for you to complete 1 and 2 on Monday and complete 3 on Wednesday. 
```{r}
library(glmnet)
library(nnet)
library(boot)
library(fastDummies)
library(haven)
library(lindia)
library(tidyverse)
library(gsheet)
library(DescTools)
library(FSA)
library(dplyr)
library(ggplot2)
library(car)
library(agricolae)
library(gmodels)
library(dplyr)
library(car)
library(readr)
library(broom)
library(modelr)
library(performance)
library(GGally)
library(emmeans)
library(visreg)
library(see)
library(patchwork)
library(caret)
```

**1. On your own, work through [2.1.5: Posterior Simulation](https://www.bayesrulesbook.com/chapter-2#building-a-bayesian-model-for-events) to simulate from the posterior found in the in-class example. Use your birthday (mmdd) as the seed.**

```{r}
library(bayesrules)
library(janitor)
library(tidyverse)

data(fake_news)
head(fake_news, n=3)

article <- data.frame(type = c("real", "fake"))

prior <- c(0.6, 0.4)

sample_n(article, size = 3, weight = prior, replace = TRUE)

set.seed(0115)
article_sim <- sample_n(article, size = 10000, 
                        weight = prior, replace = TRUE)

ggplot(article_sim, aes(x = type)) + 
  geom_bar()

fake_news %>% 
  tabyl(type) %>% 
  adorn_totals("row")

fake_news %>% 
  tabyl(title_has_excl, type) %>% 
  adorn_totals("row")

article_sim <- article_sim %>% 
  mutate(data_model = case_when(type == "fake" ~ 0.2667,
                                type == "real" ~ 0.0222))

glimpse(article_sim)

data <- c("no", "yes")

set.seed(0115)
article_sim <- article_sim %>%
  group_by(1:n()) %>% 
  mutate(usage = sample(data, size = 1, 
                        prob = c(1 - data_model, data_model)))

article_sim %>% 
  tabyl(usage, type) %>% 
  adorn_totals(c("col","row"))

ggplot(article_sim, aes(x = type, fill = usage)) + 
  geom_bar(position = "fill")

article_sim %>% 
  filter(usage == "yes") %>% 
  tabyl(type) %>% 
  adorn_totals("row")

ggplot(article_sim, aes(x = type)) + 
  geom_bar() + 
  facet_wrap(~ usage)

```

**2. Discuss and compare graphs with your groupmates. What do you notice?**

The proportion of real to fake articles remains consistent across all simulations, reflecting the prior probabilities.
The second graph shows the proportion within each article type that has the characteristic being examined.
The third graph shows a direct comparison of the count of articles with and without the characteristic, across real and fake categories.
The first and third graphs give an absolute comparison, while the second one provides relative proportions.

The prior probabilities govern the overall distribution of article types in the simulations.
The characteristic being examined (e.g., title_has_excl) is not really present in either type of articles, suggesting it might not be a strong standalone indicator of the article's authenticity.
There is a visible difference in the characteristic's distribution between real and fake articles, which could potentially be used to inform models distinguishing between the two.

**3. On your own, replicate the in-class example, but let $A$ be the event that at least one of the words in the title is in all caps and $B$ be the event that the article is fake.**

```{r}

library(bayesrules)
library(janitor)
library(tidyverse)

data(fake_news) 

fake_news <- fake_news %>%
  mutate(all_caps = title_caps > 0)

fake_news %>% 
  tabyl(all_caps, type) %>% 
  adorn_totals("row")

P_B <- 0.4  
P_A_given_B <- 0.7  
P_A_given_Bc <- 0.3  

P_A <- P_A_given_B * P_B + P_A_given_Bc * (1 - P_B)

P_B_given_A <- (P_A_given_B * P_B) / P_A

print(paste("Probability that an article is fake given that it has at least one all-caps word in the title:", P_B_given_A))
```

**Use the starter code to work through finding the probability that the article is fake given at least one word in the title is in all caps, $P[B|A]$.**
```{r}
fake_with_all_caps <- 35
real_with_all_caps <- 23
total_fake <- 60
total_real <- 90

P_B <- total_fake / (total_fake + total_real)  
P_A_given_B <- fake_with_all_caps / total_fake  
P_A_given_Bc <- real_with_all_caps / total_real  

P_A <- P_A_given_B * P_B + P_A_given_Bc * (1 - P_B)

P_B_given_A <- (P_A_given_B * P_B) / P_A

print(paste("Probability that an article is fake given that it has at least one all-caps word in the title:", P_B_given_A))
```


**4. With your group, work through [2.2: Pop vs. Soda vs. Coke](https://www.bayesrulesbook.com/chapter-2#michelle-simple). You will create a brief (no more than 10 minutes) presentation deriving the posterior probabilities. Yes, you must use Quarto slides.**

**Group 1: demonstrate finding $P[M]$.**

**Group 2: demonstrate finding $P[N]$.**

**Group 3: demonstrate finding $P[S]$.**

**Group 4: demonstrate finding $P[W]$.**

```{r}
P_M <- 0.21
P_N <- 0.17
P_S <- 0.38
P_W <- 0.24

L_M_A <- 0.6447
L_N_A <- 0.2734
L_S_A <- 0.0792
L_W_A <- 0.2943

P_A <- L_M_A * P_M + L_N_A * P_N + L_S_A * P_S + L_W_A * P_W

P_W_A <- (L_W_A * P_W) / P_A

cat("The posterior probability that the interviewee lives in the West given they use 'pop' is:", P_W_A, "\n")
```

**All UWF students have access to Zoom ([log in here](http://uwf.zoom.com)). Please have one team member record your presentation *to the cloud*. Your deliverable here is the resulting link with passcode. These will be posted to Canvas to share with the class.**





















